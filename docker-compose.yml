version: "3.8"

services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  orchard_api:
    build:
      context: ./teste
      dockerfile: Dockerfile
    container_name: orchard_api
    restart: unless-stopped
    environment:
      MONGODB_URI: "mongodb://mongo:27017/orchard_db"
      PORT: 4000
      RABBITMQ_URI: "amqp://rabbitmq:5672"
    ports:
      - "4000:4000"
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  api1:
    build:
      context: ./advanced-topics
      dockerfile: Dockerfile
    container_name: api1-app
    environment:
      RABBITMQ_URI: "amqp://rabbitmq:5672"
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - orchard_api

volumes:
  mongo_data:
